// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kutya_sajat_api.Data;

namespace kutya_sajat_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240529125920_add-seeding-sequence-1")]
    partial class addseedingsequence1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("kutya_sajat_api.Data.Models.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BreedId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AnimalId");

                    b.HasIndex("BreedId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            AnimalId = 1,
                            BreedId = 1,
                            DateOfBirth = new DateTime(2012, 1, 3, 14, 48, 13, 893, DateTimeKind.Unspecified).AddTicks(3536),
                            Name = "Whitney",
                            OwnerId = 1
                        });
                });

            modelBuilder.Entity("kutya_sajat_api.Data.Models.Breed", b =>
                {
                    b.Property<int>("BreedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("BreedId");

                    b.ToTable("Breeds");

                    b.HasData(
                        new
                        {
                            BreedId = 1,
                            Description = "Blanditiis vero sit molestiae accusamus velit necessitatibus.",
                            Name = "Miller"
                        });
                });

            modelBuilder.Entity("kutya_sajat_api.Data.Models.MedicalRecord", b =>
                {
                    b.Property<int>("MedicalRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnimalId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasKey("MedicalRecordId");

                    b.HasIndex("AnimalId");

                    b.ToTable("MedicalRecords");

                    b.HasData(
                        new
                        {
                            MedicalRecordId = 1,
                            AnimalId = 1,
                            CreatedAt = new DateTime(1964, 11, 19, 20, 58, 28, 458, DateTimeKind.Unspecified).AddTicks(8700),
                            Description = "aspernatur"
                        },
                        new
                        {
                            MedicalRecordId = 2,
                            AnimalId = 1,
                            CreatedAt = new DateTime(1968, 8, 10, 1, 47, 23, 97, DateTimeKind.Unspecified).AddTicks(1080),
                            Description = "Error quae qui aliquid iure laborum velit ea aliquam."
                        },
                        new
                        {
                            MedicalRecordId = 3,
                            AnimalId = 1,
                            CreatedAt = new DateTime(1905, 1, 16, 13, 33, 39, 359, DateTimeKind.Unspecified).AddTicks(6358),
                            Description = "In facere quidem vitae. Est dicta quis quia voluptas provident temporibus quod itaque. Ex laborum officiis nemo totam. Velit praesentium fugiat. Aliquam alias corrupti."
                        });
                });

            modelBuilder.Entity("kutya_sajat_api.Data.Models.Owner", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdCardNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("OwnerId");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            OwnerId = 1,
                            IdCardNumber = "b0a67ddc-6805-4cd4-8c86-fe0b2e3299c8",
                            Name = "Bertram Steuber"
                        });
                });

            modelBuilder.Entity("kutya_sajat_api.Data.Models.Animal", b =>
                {
                    b.HasOne("kutya_sajat_api.Data.Models.Breed", "Breed")
                        .WithMany("Animals")
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kutya_sajat_api.Data.Models.Owner", "Owner")
                        .WithMany("Animals")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Breed");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("kutya_sajat_api.Data.Models.MedicalRecord", b =>
                {
                    b.HasOne("kutya_sajat_api.Data.Models.Animal", "Animal")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("kutya_sajat_api.Data.Models.Animal", b =>
                {
                    b.Navigation("MedicalRecords");
                });

            modelBuilder.Entity("kutya_sajat_api.Data.Models.Breed", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("kutya_sajat_api.Data.Models.Owner", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
